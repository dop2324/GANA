package egovframework.dnworks.cmm.util;

import java.awt.Image;
import java.io.File;
import java.io.IOException;

import javax.swing.ImageIcon;

import egovframework.com.cmm.service.EgovProperties;
import net.coobird.thumbnailator.Thumbnails;

public class Thumbnailator 
{
	public static void createThumbImage(String where, String subPath, String fileName) throws IOException {
    	String srcfileName = String.format("%s/%s/%s", where, subPath, fileName);
    	int[] size = thumbImageSize(srcfileName);
    	thumbImage(srcfileName, size[0], size[1]);
    }
	
	public static void createThumbImage(String where, String subPath, String fileName, String thumbFileNm) throws IOException {
    	String srcfilePath = String.format("%s/%s/%s", where, subPath, fileName);
    	String thumbfilePath = String.format("%s/%s/%s", where, subPath, thumbFileNm);
    	int[] size = thumbImageSize(srcfilePath);
    	thumbImage(srcfilePath, thumbfilePath, size[0], size[1]);
    }
	
	private static int[] thumbImageSize(String filePathName) {
		int[] size = {0, 0};
		
		//이미지 사이즈결정
    	int maxWidth 	= Util.nvl(EgovProperties.getProperty("Globals.thumbWidth"), 800);

    	File file = new File(filePathName);
    	if(file.exists()) {
			Image img = new ImageIcon(filePathName).getImage();
			int imgWidth = img.getWidth(null);
			int imgHeight = img.getHeight(null);
			
            if (imgWidth >  maxWidth) {
            	imgHeight = (imgHeight *  maxWidth) / imgWidth;
            	imgWidth =  maxWidth;
            }
       
            size[0] = imgWidth;
    		size[1] = imgHeight;
		}

		return size;
	}

	private static void thumbImage(String phyfilePath, String thumbFilePath, int width, int height) throws IOException {
		if(Util.isImageFile(Util.getFileFullName(phyfilePath))) {
			Thumbnails.of(phyfilePath).size(width,height).toFile(thumbFilePath);
		}
    }
	private static void thumbImage(String phyfilePath, int width, int height) throws IOException {
		if(Util.isImageFile(Util.getFileFullName(phyfilePath))) {
			Thumbnails.of(phyfilePath).size(width,height).toFile(phyfilePath);
		}
    }
	
}
