<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="egovframework.dnworks.func.cal.service.impl.CalInfoMapper">

  <!-- 목록 조건 공통 SQL (별칭 A 기준) -->
  <sql id="whereCalList">
    <where>
    <if test="orgUnqId != null and orgUnqId != ''">
      AND A.ORG_UNQ_ID = #{orgUnqId}
    </if>

    <!-- 날짜 기준 필터 -->
    <!-- 날짜 기준 필터 -->
	<choose>
	  <when test="dateType == 'soldDate'">
	    <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
	      AND A.SOLD_DATE BETWEEN TO_DATE(#{startDate}, 'YYYY-MM-DD') AND TO_DATE(#{endDate}, 'YYYY-MM-DD')
	    </if>
	    <if test="(startDate == null or startDate == '') and (endDate == null or endDate == '')">
	      AND A.SOLD_DATE = TRUNC(SYSDATE)
	    </if>
	  </when>
	  <otherwise>
	    <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
	      AND A.PAYOUT_DATE BETWEEN TO_DATE(#{startDate}, 'YYYY-MM-DD') AND TO_DATE(#{endDate}, 'YYYY-MM-DD')
	    </if>
	    <if test="(startDate == null or startDate == '') and (endDate == null or endDate == '')">
	      AND A.PAYOUT_DATE = TRUNC(SYSDATE)
	    </if>
	  </otherwise>
	</choose>


    <!-- 결제 상태 필터 -->
    <if test="status != null and status != ''">
      <choose>
        <when test="status == 'payment'">
          AND A.AMOUNT &gt; 0
        </when>
        <when test="status == 'refund'">
          AND A.AMOUNT &lt; 0
        </when>
      </choose>
    </if>
  </where>
  </sql>

  <!-- 목록 총 개수 (조인 없이 성능 우선) -->
  <select id="selectListCnt" parameterType="map" resultType="int">
    SELECT COUNT(1)
    FROM TN_CAL_INFO
    <where>
      <if test="orgUnqId != null and orgUnqId != ''">
        AND ORG_UNQ_ID = #{orgUnqId}
      </if>
      <if test="startDate != null and startDate != ''">
        AND PAYOUT_DATE = TO_DATE(#{startDate}, 'YYYY-MM-DD')
      </if>
      <if test="startDate == null or startDate == ''">
        AND PAYOUT_DATE = TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM-DD'), 'YYYY-MM-DD')
      </if>
    </where>
  </select>

  <!-- 목록 조회 (조인 포함, ORG_NM 추가) -->
  <select id="selectList" parameterType="map" resultType="egovframework.dnworks.func.cal.service.CalInfoVO">
    SELECT T.*
    FROM (
      SELECT 
        ROW_NUMBER() OVER (ORDER BY A.PAYOUT_DATE DESC, A.ORDER_ID) AS RNUM,
        A.CAL_ID AS calId,
        A.ORG_UNQ_ID AS orgUnqId,
        A.MID AS mid,
        A.ORDER_ID AS orderId,
        A.METHOD AS method,
        A.AMOUNT AS amount,
        A.FEE AS fee,
        A.INTEREST_FEE AS interestFee,
        A.SUPPLY_AMOUNT AS supplyAmount,
        A.VAT AS vat,
        A.PAYOUT_AMOUNT AS payoutAmount,
        TO_CHAR(A.APPROVED_AT, 'YYYY-MM-DD') AS approvedAt,
        TO_CHAR(A.SOLD_DATE, 'YYYY-MM-DD') AS soldDate,
        TO_CHAR(A.PAYOUT_DATE, 'YYYY-MM-DD') AS payoutDate,
        TO_CHAR(A.CREATED_AT, 'YYYY-MM-DD HH24:MI:SS') AS createdAt,
        B.ORG_NM AS orgNm
      FROM TN_CAL_INFO A
      LEFT JOIN TN_ORG_INFO B ON A.ORG_UNQ_ID = B.ORG_UNQ_ID
      <include refid="whereCalList"/>
    ) T
  </select>

  <!-- 단건 조회 (중복 체크용) -->
  <select id="selectCalInfo" parameterType="egovframework.dnworks.func.cal.service.CalInfoVO" resultType="egovframework.dnworks.func.cal.service.CalInfoVO">
    SELECT
      CAL_ID,
      ORG_UNQ_ID,
      ORDER_ID,
      TO_CHAR(PAYOUT_DATE, 'YYYY-MM-DD') AS payoutDate
    FROM TN_CAL_INFO
    WHERE ORG_UNQ_ID = #{orgUnqId}
      AND ORDER_ID = #{orderId}
  </select>

  <!-- 정산 데이터 삭제 (재수집용) -->
  <delete id="deleteCalInfoByDate" parameterType="map">
    DELETE FROM TN_CAL_INFO
    WHERE ORG_UNQ_ID = #{orgUnqId}
      AND TRUNC(PAYOUT_DATE) BETWEEN TO_DATE(#{startDate}, 'YYYY-MM-DD') AND TO_DATE(#{endDate}, 'YYYY-MM-DD')
  </delete>

  <!-- 정산 데이터 저장 -->
  <insert id="insertCalInfo" parameterType="egovframework.dnworks.func.cal.service.CalInfoVO">
    INSERT INTO TN_CAL_INFO (
      CAL_ID,
      ORG_UNQ_ID,
      MID,
      ORDER_ID,
      METHOD,
      AMOUNT,
      FEE,
      INTEREST_FEE,
      SUPPLY_AMOUNT,
      VAT,
      PAYOUT_AMOUNT,
      APPROVED_AT,
      SOLD_DATE,
      PAYOUT_DATE,
      CREATED_AT
    ) VALUES (
      #{calId},
      #{orgUnqId},
      #{mid},
      #{orderId},
      #{method},
      #{amount},
      #{fee},
      #{interestFee},
      #{supplyAmount},
      #{vat},
      #{payoutAmount},
      TO_DATE(#{approvedAt}, 'YYYY-MM-DD'),
      TO_DATE(#{soldDate}, 'YYYY-MM-DD'),
      TO_DATE(#{payoutDate}, 'YYYY-MM-DD'),
      SYSDATE
    )
  </insert>

</mapper>
